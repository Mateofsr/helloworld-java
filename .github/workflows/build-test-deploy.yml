name: Build Test and Deploy

on:
  push:
    branches:
      - main
env:
  PROJECT_VERSION: 1.0.0
jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - run: ls
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - run: ls
      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          java-version: 17
          distribution: temurin
      - name: Cache
        uses: actions/cache@v4.1.2
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ${{ github.workspace }}/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashfiles('**/pow.xml')}}
      - name: Build project with Maven
        run: mvn clean package -DskipTests
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          # Artifact name
          name: artifactjar
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/helloworld-java/helloworld-java/target/helloworld-1.0-SNAPSHOT.jar
      
  test:
    name: Test application
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          java-version: 17
          distribution: temurin
      - name: Cache
        uses: actions/cache@v4.1.2
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ${{ github.workspace }}/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashfiles('**/pow.xml')}}
      - name: Test project with Maven
        run: mvn clean package -DskipTests
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - name: Start depoyment
    - run: echo "Deployment of the application"
